@model PBDE401.ViewModel.MedicineViewModel

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm("Create", "Medicine", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h3>Create Medicine Record</h3>
        <hr />
        <div class="form-border">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Medicine.MedicalNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Medicine.MedicalNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Medicine.MedicalNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Medicine.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Medicine.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Medicine.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Medicine.Origin, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Medicine.Origin, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Medicine.Origin, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Medicine.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Medicine.Description, new { @class = "form-control", style = "height:250px;" })
                    @Html.ValidationMessageFor(model => model.Medicine.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.Medicine.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Medicine.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Medicine.ImageUrl, "", new { @class = "text-danger" })
                    </div>
                </div>*@
            <div class="form-group">
                <label class="control-label col-md-2" for="ImageUrl">Upload Image</label>
                <div class="col-md-10">
                    <input type="file" name="file" id="ImageUpload" /> <br />
                    <img id="imgpreview" src="#" />
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Medicine.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Medicine.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Medicine.Quantity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Medicine.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Medicine.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Medicine.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Medicine.DateAdded, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Medicine.DateAdded, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Medicine.DateAdded, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Medicine.CategoryId, "CategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Medicine.CategoryId, new SelectList(Model.Categories, "Id", "Name"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Medicine.CategoryId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Medicine.ExpiryDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Medicine.ExpiryDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Medicine.ExpiryDate, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="col-md-10">
                <input type="submit" value="Create" class="btn btn-success btn-sm" />
                @Html.Partial("_BackToListButtonPartial")
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $("img#imgpreview")
                        .attr("src", e.target.result)
                        .width(200)
                        .height(200);
                }

                reader.readAsDataURL(input.files[0]);
            }
        }

        $("#ImageUpload").change(function () {
            readURL(this);
        });
    </script>
}
